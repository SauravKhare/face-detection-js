{"version":3,"sources":["pixelated-face.js"],"names":["webcamVideo","document","querySelector","videoCanvas","ctxVideoCanvas","getContext","faceCanvas","ctxFaceCanvas","SIZE","SCALE","faceDetector","FaceDetector","getWebcamVideo","webcamStream","navigator","mediaDevices","getUserMedia","video","width","height","srcObject","play","videoWidth","videoHeight","detectFaces","faces","detect","requestAnimationFrame","forEach","drawFace","censorFace","face","top","left","boundingBox","clearRect","strokeStyle","lineWidth","strokeRect","imageSmoothingEnabled","drawImage","x","y","then"],"mappings":"AAAA;AACA;AAEA,MAAMA,WAAW,GAAGC,QAAQ,CAACC,aAAT,CAAuB,SAAvB,CAApB;AACA,MAAMC,WAAW,GAAGF,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAApB;AACA,MAAME,cAAc,GAAGD,WAAW,CAACE,UAAZ,CAAuB,IAAvB,CAAvB;AACA,MAAMC,UAAU,GAAGL,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAnB;AACA,MAAMK,aAAa,GAAGD,UAAU,CAACD,UAAX,CAAsB,IAAtB,CAAtB;AACA,MAAMG,IAAI,GAAG,EAAb;AACA,MAAMC,KAAK,GAAG,GAAd,EACA;;AAEA,MAAMC,YAAY,GAAG,IAAIC,YAAJ,EAArB,EAEA;;AAEA,eAAeC,cAAf,GAAgC;AAC9B,QAAMC,YAAY,GAAG,MAAMC,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoC;AAC7DC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,GAAT;AAAcC,MAAAA,MAAM,EAAE;AAAtB;AADsD,GAApC,CAA3B;AAGAnB,EAAAA,WAAW,CAACoB,SAAZ,GAAwBP,YAAxB;AACA,QAAMb,WAAW,CAACqB,IAAZ,EAAN;AACAlB,EAAAA,WAAW,CAACe,KAAZ,GAAoBlB,WAAW,CAACsB,UAAhC;AACAnB,EAAAA,WAAW,CAACgB,MAAZ,GAAqBnB,WAAW,CAACuB,WAAjC;AACAjB,EAAAA,UAAU,CAACY,KAAX,GAAmBlB,WAAW,CAACsB,UAA/B;AACAhB,EAAAA,UAAU,CAACa,MAAX,GAAoBnB,WAAW,CAACuB,WAAhC;AACD;;AAED,eAAeC,WAAf,GAA6B;AAC3B,QAAMC,KAAK,GAAG,MAAMf,YAAY,CAACgB,MAAb,CAAoB1B,WAApB,CAApB;AACA2B,EAAAA,qBAAqB,CAACH,WAAD,CAArB;AACAC,EAAAA,KAAK,CAACG,OAAN,CAAcC,QAAd;AACAJ,EAAAA,KAAK,CAACG,OAAN,CAAcE,UAAd;AACD;;AAED,SAASD,QAAT,CAAkBE,IAAlB,EAAwB;AACtB,QAAM;AAAEb,IAAAA,KAAF;AAASC,IAAAA,MAAT;AAAiBa,IAAAA,GAAjB;AAAsBC,IAAAA;AAAtB,MAA+BF,IAAI,CAACG,WAA1C;AACA9B,EAAAA,cAAc,CAAC+B,SAAf,CAAyB,CAAzB,EAA4B,CAA5B,EAA+BhC,WAAW,CAACe,KAA3C,EAAkDf,WAAW,CAACgB,MAA9D;AACAf,EAAAA,cAAc,CAACgC,WAAf,GAA6B,SAA7B;AACAhC,EAAAA,cAAc,CAACiC,SAAf,GAA2B,CAA3B;AACAjC,EAAAA,cAAc,CAACkC,UAAf,CAA0BL,IAA1B,EAAgCD,GAAhC,EAAqCd,KAAK,GAAGT,KAA7C,EAAoDU,MAAM,GAAGV,KAA7D;AACD;;AAED,SAASqB,UAAT,CAAoB;AAAEI,EAAAA,WAAW,EAAEH;AAAf,CAApB,EAA2C;AACzCxB,EAAAA,aAAa,CAACgC,qBAAd,GAAsC,KAAtC;AACAhC,EAAAA,aAAa,CAAC4B,SAAd,CAAwB,CAAxB,EAA2B,CAA3B,EAA8B7B,UAAU,CAACY,KAAzC,EAAgDZ,UAAU,CAACa,MAA3D;AACAZ,EAAAA,aAAa,CAACiC,SAAd,EACE;AACAxC,EAAAA,WAFF,EAGE+B,IAAI,CAACU,CAHP,EAIEV,IAAI,CAACW,CAJP,EAKEX,IAAI,CAACb,KALP,EAMEa,IAAI,CAACZ,MANP,EAOE;AACAY,EAAAA,IAAI,CAACU,CARP,EASEV,IAAI,CAACW,CATP,EAUElC,IAVF,EAWEA,IAXF;AAcA,QAAMU,KAAK,GAAGa,IAAI,CAACb,KAAL,GAAaT,KAA3B;AACA,QAAMU,MAAM,GAAGY,IAAI,CAACZ,MAAL,GAAcV,KAA7B;AAEAF,EAAAA,aAAa,CAACiC,SAAd,CACElC,UADF,EAEEyB,IAAI,CAACU,CAFP,EAGEV,IAAI,CAACW,CAHP,EAIElC,IAJF,EAKEA,IALF,EAMEuB,IAAI,CAACU,CANP,EAOEV,IAAI,CAACW,CAPP,EAQExB,KARF,EASEC,MATF;AAWD;;AACDP,cAAc,GAAG+B,IAAjB,CAAsBnB,WAAtB","file":"pixelated-face.9301d95e.js","sourceRoot":"..","sourcesContent":["// Grab the canvas and video elements from webpage\r\n// and initialize the canvas context\r\n\r\nconst webcamVideo = document.querySelector('.webcam');\r\nconst videoCanvas = document.querySelector('.video');\r\nconst ctxVideoCanvas = videoCanvas.getContext('2d');\r\nconst faceCanvas = document.querySelector('.face');\r\nconst ctxFaceCanvas = faceCanvas.getContext('2d');\r\nconst SIZE = 10;\r\nconst SCALE = 1.1;\r\n// Create new face detector using Chrome API\r\n\r\nconst faceDetector = new FaceDetector();\r\n\r\n// Write a function to populate video from facecam into page\r\n\r\nasync function getWebcamVideo() {\r\n  const webcamStream = await navigator.mediaDevices.getUserMedia({\r\n    video: { width: 640, height: 480 },\r\n  });\r\n  webcamVideo.srcObject = webcamStream;\r\n  await webcamVideo.play();\r\n  videoCanvas.width = webcamVideo.videoWidth;\r\n  videoCanvas.height = webcamVideo.videoHeight;\r\n  faceCanvas.width = webcamVideo.videoWidth;\r\n  faceCanvas.height = webcamVideo.videoHeight;\r\n}\r\n\r\nasync function detectFaces() {\r\n  const faces = await faceDetector.detect(webcamVideo);\r\n  requestAnimationFrame(detectFaces);\r\n  faces.forEach(drawFace);\r\n  faces.forEach(censorFace);\r\n}\r\n\r\nfunction drawFace(face) {\r\n  const { width, height, top, left } = face.boundingBox;\r\n  ctxVideoCanvas.clearRect(0, 0, videoCanvas.width, videoCanvas.height);\r\n  ctxVideoCanvas.strokeStyle = '#ffc600';\r\n  ctxVideoCanvas.lineWidth = 2;\r\n  ctxVideoCanvas.strokeRect(left, top, width * SCALE, height * SCALE);\r\n}\r\n\r\nfunction censorFace({ boundingBox: face }) {\r\n  ctxFaceCanvas.imageSmoothingEnabled = false;\r\n  ctxFaceCanvas.clearRect(0, 0, faceCanvas.width, faceCanvas.height);\r\n  ctxFaceCanvas.drawImage(\r\n    // 5 sourceargs\r\n    webcamVideo,\r\n    face.x,\r\n    face.y,\r\n    face.width,\r\n    face.height,\r\n    // 4 location args\r\n    face.x,\r\n    face.y,\r\n    SIZE,\r\n    SIZE\r\n  );\r\n\r\n  const width = face.width * SCALE;\r\n  const height = face.height * SCALE;\r\n\r\n  ctxFaceCanvas.drawImage(\r\n    faceCanvas,\r\n    face.x,\r\n    face.y,\r\n    SIZE,\r\n    SIZE,\r\n    face.x,\r\n    face.y,\r\n    width,\r\n    height\r\n  );\r\n}\r\ngetWebcamVideo().then(detectFaces);\r\n"]}